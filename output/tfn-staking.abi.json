{
    "buildInfo": {
        "rustc": {
            "version": "1.85.0",
            "commitHash": "4d91de4e48198da2e33413efdcd9cd2cc0c46688",
            "commitDate": "2025-02-17",
            "channel": "Stable",
            "short": "rustc 1.85.0 (4d91de4e4 2025-02-17)"
        },
        "contractCrate": {
            "name": "tfn-staking",
            "version": "0.0.1"
        },
        "framework": {
            "name": "multiversx-sc",
            "version": "0.54.5"
        }
    },
    "name": "TFNStakingContract",
    "constructor": {
        "inputs": [],
        "outputs": []
    },
    "upgradeConstructor": {
        "inputs": [],
        "outputs": []
    },
    "endpoints": [
        {
            "name": "createStake",
            "onlyOwner": true,
            "mutability": "mutable",
            "payableInTokens": [
                "EGLD"
            ],
            "inputs": [
                {
                    "name": "stake_type",
                    "type": "StakeType"
                },
                {
                    "name": "token",
                    "type": "TokenIdentifier"
                },
                {
                    "name": "token_decimals",
                    "type": "u8"
                },
                {
                    "name": "reward_token",
                    "type": "TokenIdentifier"
                }
            ],
            "outputs": []
        },
        {
            "name": "setStakeActive",
            "onlyOwner": true,
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "id",
                    "type": "u64"
                }
            ],
            "outputs": []
        },
        {
            "name": "setStakeInactive",
            "onlyOwner": true,
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "id",
                    "type": "u64"
                }
            ],
            "outputs": []
        },
        {
            "name": "setStakeRewardsPerSecond",
            "onlyOwner": true,
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "id",
                    "type": "u64"
                },
                {
                    "name": "rewards_per_second",
                    "type": "BigUint"
                }
            ],
            "outputs": []
        },
        {
            "name": "setStakeEndTime",
            "onlyOwner": true,
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "id",
                    "type": "u64"
                },
                {
                    "name": "new_end_time",
                    "type": "u64"
                }
            ],
            "outputs": []
        },
        {
            "name": "depositRewards",
            "mutability": "mutable",
            "payableInTokens": [
                "*"
            ],
            "inputs": [
                {
                    "name": "id",
                    "type": "u64"
                }
            ],
            "outputs": []
        },
        {
            "name": "withdrawRewards",
            "onlyOwner": true,
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "id",
                    "type": "u64"
                },
                {
                    "name": "opt_amount",
                    "type": "optional<BigUint>",
                    "multi_arg": true
                }
            ],
            "outputs": []
        },
        {
            "name": "changeStakeType",
            "onlyOwner": true,
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "id",
                    "type": "u64"
                },
                {
                    "name": "new_stake_type",
                    "type": "StakeType"
                }
            ],
            "outputs": []
        },
        {
            "name": "getState",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "State"
                }
            ]
        },
        {
            "name": "setStateActive",
            "onlyOwner": true,
            "mutability": "mutable",
            "inputs": [],
            "outputs": []
        },
        {
            "name": "setStateInactive",
            "onlyOwner": true,
            "mutability": "mutable",
            "inputs": [],
            "outputs": []
        },
        {
            "name": "getStake",
            "mutability": "readonly",
            "inputs": [
                {
                    "name": "id",
                    "type": "u64"
                }
            ],
            "outputs": [
                {
                    "type": "Stake"
                }
            ]
        },
        {
            "name": "getLastStakeId",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "u64"
                }
            ]
        },
        {
            "name": "getStakeByToken",
            "mutability": "readonly",
            "inputs": [
                {
                    "name": "token",
                    "type": "TokenIdentifier"
                }
            ],
            "outputs": [
                {
                    "type": "Option<Stake>"
                }
            ]
        },
        {
            "name": "getStakeByLiquidToken",
            "mutability": "readonly",
            "inputs": [
                {
                    "name": "token",
                    "type": "TokenIdentifier"
                }
            ],
            "outputs": [
                {
                    "type": "Option<Stake>"
                }
            ]
        },
        {
            "name": "getStakes",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "List<Stake>"
                }
            ]
        },
        {
            "name": "getUserRewards",
            "mutability": "readonly",
            "inputs": [
                {
                    "name": "id",
                    "type": "u64"
                },
                {
                    "name": "staked_tokens",
                    "type": "List<EsdtTokenPayment>"
                }
            ],
            "outputs": [
                {
                    "type": "BigUint"
                }
            ]
        },
        {
            "name": "userStake",
            "mutability": "mutable",
            "payableInTokens": [
                "*"
            ],
            "inputs": [],
            "outputs": []
        },
        {
            "name": "userUnstake",
            "mutability": "mutable",
            "payableInTokens": [
                "*"
            ],
            "inputs": [],
            "outputs": []
        },
        {
            "name": "claimRewards",
            "mutability": "mutable",
            "payableInTokens": [
                "*"
            ],
            "inputs": [],
            "outputs": []
        }
    ],
    "esdtAttributes": [],
    "hasCallback": true,
    "types": {
        "EsdtTokenPayment": {
            "type": "struct",
            "fields": [
                {
                    "name": "token_identifier",
                    "type": "TokenIdentifier"
                },
                {
                    "name": "token_nonce",
                    "type": "u64"
                },
                {
                    "name": "amount",
                    "type": "BigUint"
                }
            ]
        },
        "Stake": {
            "type": "struct",
            "fields": [
                {
                    "name": "id",
                    "type": "u64"
                },
                {
                    "name": "state",
                    "type": "State"
                },
                {
                    "name": "stake_type",
                    "type": "StakeType"
                },
                {
                    "name": "token",
                    "type": "TokenIdentifier"
                },
                {
                    "name": "token_decimals",
                    "type": "u8"
                },
                {
                    "name": "liquid_token",
                    "type": "TokenIdentifier"
                },
                {
                    "name": "reward_token",
                    "type": "TokenIdentifier"
                },
                {
                    "name": "staked_amount",
                    "type": "BigUint"
                },
                {
                    "name": "rewards_amount",
                    "type": "BigUint"
                },
                {
                    "name": "claimable_rewards",
                    "type": "BigUint"
                },
                {
                    "name": "remaining_rewards",
                    "type": "BigUint"
                },
                {
                    "name": "rewards_per_second",
                    "type": "BigUint"
                },
                {
                    "name": "start_time",
                    "type": "u64"
                },
                {
                    "name": "end_time",
                    "type": "u64"
                },
                {
                    "name": "remaining_time",
                    "type": "u64"
                },
                {
                    "name": "rps",
                    "type": "BigUint"
                },
                {
                    "name": "last_rps_update_time",
                    "type": "u64"
                }
            ]
        },
        "StakeType": {
            "type": "enum",
            "variants": [
                {
                    "name": "FixedAPR",
                    "discriminant": 0
                },
                {
                    "name": "DynamicAPR",
                    "discriminant": 1
                }
            ]
        },
        "State": {
            "type": "enum",
            "variants": [
                {
                    "name": "Inactive",
                    "discriminant": 0
                },
                {
                    "name": "Active",
                    "discriminant": 1
                }
            ]
        }
    }
}
